@model TesterLab.Domain.Models.TestRun
@{
    ViewData["Title"] = "Détails de l'exécution";
}

<div class="container mt-4 mb-5">
    <div class="card shadow-sm border-0">
        <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
            <h4 class="mb-0"><i class="bi bi-activity me-2"></i>@Model.Name</h4>
            <span class="badge bg-light text-dark">@Model.Status</span>
        </div>

        <div class="card-body">
            <!-- Informations principales -->
            <div class="row g-3 mb-3">
                <div class="col-md-4">
                    <label class="text-muted small">Application</label>
                    <div class="fw-semibold">@Model.Application?.Name</div>
                </div>
                <div class="col-md-4">
                    <label class="text-muted small">Type d'exécution</label>
                    <div class="fw-semibold">@Model.ExecutionType</div>
                </div>
                <div class="col-md-4">
                    <label class="text-muted small">Déclencheur</label>
                    <div class="fw-semibold">@Model.Trigger</div>
                </div>
            </div>

            <div class="row g-3 mb-3">
                <div class="col-md-4">
                    <label class="text-muted small">Environnement</label>
                    <div class="fw-semibold">@Model.Environment?.Name</div>
                </div>
                <div class="col-md-4">
                    <label class="text-muted small">Navigateur</label>
                    <div class="fw-semibold">@Model.Browser</div>
                </div>
                <div class="col-md-4">
                    <label class="text-muted small">Mode d'exécution</label>
                    <div class="fw-semibold">@((Model.Headless ? "Headless" : "Visuel"))</div>
                </div>
            </div>

            <hr />

            <!-- Progression -->
            <div class="mb-4">
                <label class="fw-semibold">Progression</label>
                <div class="progress" style="height: 22px;">
                    <div class="progress-bar @GetStatusClass(Model.Status)" role="progressbar"
                         style="width: @Model.ProgressPercentage%;" aria-valuenow="@Model.ProgressPercentage"
                         aria-valuemin="0" aria-valuemax="100">
                        @Model.ProgressPercentage %
                    </div>
                </div>
            </div>

            <!-- Résultats -->
            <div class="d-flex flex-wrap gap-4 mb-4">
                <div><span class="fw-bold text-success">@Model.PassedCount</span> réussis</div>
                <div><span class="fw-bold text-danger">@Model.FailedCount</span> échoués</div>
                <div><span class="fw-bold text-secondary">@Model.SkippedCount</span> ignorés</div>
            </div>

            <!-- Période -->
            <div class="row g-3 mb-3">
                <div class="col-md-4">
                    <label class="text-muted small">Créé le</label>
                    <div>@Model.CreatedAt.ToLocalTime().ToString("f")</div>
                </div>
                <div class="col-md-4">
                    <label class="text-muted small">Démarré le</label>
                    <div>@(Model.StartedAt?.ToLocalTime().ToString("f") ?? "-")</div>
                </div>
                <div class="col-md-4">
                    <label class="text-muted small">Terminé le</label>
                    <div>@(Model.CompletedAt?.ToLocalTime().ToString("f") ?? "-")</div>
                </div>
            </div>

            <hr />

            <!-- Détails / logs -->
            @if (!string.IsNullOrEmpty(Model.DetailedResults))
            {
                <div class="mb-4">
                    <h5 class="fw-semibold"><i class="bi bi-clipboard-check me-2"></i>Résultats détaillés</h5>
                    <pre class="bg-light p-3 rounded small text-dark border">@Model.DetailedResults</pre>
                </div>
            }

            @if (!string.IsNullOrEmpty(Model.ExecutionLogs))
            {
                <div class="mb-4">
                    <h5 class="fw-semibold"><i class="bi bi-terminal me-2"></i>Logs d'exécution</h5>
                    <pre class="bg-dark text-light p-3 rounded small border">@Model.ExecutionLogs</pre>
                </div>
            }

            <!-- Captures d’écran -->
            @if (!string.IsNullOrEmpty(Model.Screenshots))
            {
                var screenshots = System.Text.Json.JsonSerializer.Deserialize<List<string>>(Model.Screenshots);
                if (screenshots?.Any() == true)
                {
                    <div class="mb-4">
                        <h5 class="fw-semibold"><i class="bi bi-images me-2"></i>Captures d’écran</h5>
                        <div class="d-flex flex-wrap gap-3">
                            @foreach (var url in screenshots)
                            {
                                <div class="border rounded shadow-sm p-1" style="width: 160px;">
                                    <a href="@url" target="_blank">
                                        <img src="@url" class="img-fluid rounded" alt="Screenshot" />
                                    </a>
                                </div>
                            }
                        </div>
                    </div>
                }
            }

            <!-- Rapport PDF -->
            @if (!string.IsNullOrEmpty(Model.ReportPath))
            {
                <div class="mt-4">
                    <a href="@Model.ReportPath" target="_blank" class="btn btn-outline-danger">
                        <i class="bi bi-file-earmark-pdf"></i> Télécharger le rapport PDF
                    </a>
                </div>
            }
        </div>

        <div class="card-footer text-end bg-light">
            <a asp-action="Index" asp-route-applicationId="@Model.ApplicationId" class="btn btn-outline-secondary">
                <i class="bi bi-arrow-left"></i> Retour à la liste
            </a>
        </div>
    </div>
</div>

@functions {
    string GetStatusClass(string status)
    {
        return status switch
        {
            "Running" => "bg-info progress-bar-striped progress-bar-animated",
            "Success" => "bg-success",
            "Failed" => "bg-danger",
            _ => "bg-secondary"
        };
    }
}
